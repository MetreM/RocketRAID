diff -ruN rr64xl-linux-src-v1.3/inc/linux_32mpa/Makefile.def kernel-4-x/inc/linux_32mpa/Makefile.def
--- rr64xl-linux-src-v1.3/inc/linux_32mpa/Makefile.def	2009-07-16 03:28:28.000000000 +0200
+++ kernel-4-x/inc/linux/Makefile.def	2016-08-05 10:32:08.498268407 +0200
@@ -49,7 +49,8 @@
 C_OPTS := -O2 -pipe \
 		-Wunused -Wparentheses -Wuninitialized -Wchar-subscripts \
 		-Wtrigraphs -Wswitch -Wreturn-type -Wimplicit \
-		-Wstrict-prototypes -fomit-frame-pointer
+		-Wstrict-prototypes -fomit-frame-pointer \
+		-Wno-date-time
 
 ifeq ($(ARCH), x86_64)
 C_OPTS += -mcmodel=kernel -mno-red-zone
@@ -73,25 +74,20 @@
 KERNELDIR := /lib/modules/$(shell uname -r)/build
 endif
 
-VERSION_H := $(shell sh -c " \
-if test -f $(KERNELDIR)/include/linux/version.h; then \
-    echo $(KERNELDIR)/include/linux/version.h; \
-elif test -f $(KERNELDIR)/include/generated/uapi/linux/version.h; then \
-    echo $(KERNELDIR)/include/generated/uapi/linux/version.h; \
-fi")
-
-MAJOR := $(shell expr `grep LINUX_VERSION_CODE $(VERSION_H) | cut -d\  -f3` / 65536 % 65536)
-MINOR := $(shell expr `grep LINUX_VERSION_CODE $(VERSION_H) | cut -d\  -f3` / 256 % 256)
-KERNEL_VER := $(MAJOR).$(MINOR)
+MAJOR := $(shell uname -r | cut -d. -f1)
+MINOR := $(shell uname -r | cut -d. -f2)
+KERNEL_VER := $(KERNEL_MAJOR).$(KERNEL_MINOR)
 
 ifeq ($(KERNEL_VER),)
 $(error Cannot find kernel version. Check $(KERNELDIR)/include/linux/version.h.)
 endif
 
+ifneq ($(MAJOR), 4)
 ifneq ($(MAJOR), 3)
 ifneq ($(KERNEL_VER), 2.6)
 ifneq ($(KERNEL_VER), 2.4)
-$(error Only kernel 2.4/2.6/3.x is supported but you use $(KERNEL_VER))
+$(error Only kernel 2.4/2.6/3.x/4.x is supported but you use $(KERNEL_VER))
+endif
 endif
 endif
 endif
diff -ruN rr64xl-linux-src-v1.3/osm/linux/hptinfo.c kernel-4-x/osm/linux/hptinfo.c
--- rr64xl-linux-src-v1.3/osm/linux/hptinfo.c	2009-07-16 03:28:28.000000000 +0200
+++ kernel-4-x/osm/linux/hptinfo.c	2016-05-29 14:41:32.000000000 +0200
@@ -8,6 +8,10 @@
 #include "osm_linux.h"
 #include "hptintf.h"
 
+/*MiSt -- v3.10 API change // commit 0ffddfbb834557b8babc7f050b83d11dbcbb1008
+  scsi: saner replacements for ->proc_info()
+*/
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)
 typedef struct _hpt_GET_INFO {
 	char *buffer;
 	int buflength;
@@ -52,6 +56,10 @@
 	hpt_copy_mem_info(pinfo, buf, len);
 	return len;
 }
+#else // >= KERNEL_VERSION(3,10,0)
+typedef struct seq_file HPT_GET_INFO;
+#define hpt_copy_info seq_printf
+#endif
 
 #define HPT_DO_IOCTL(code, inbuf, insize, outbuf, outsize) ({\
 	IOCTL_ARG arg;\
@@ -181,7 +189,7 @@
 					devinfo.u.device.ControllerId+1,
 					devinfo.u.device.PathId+1,
 					devinfo.u.device.TargetId+1,
-					devinfo.u.device.IdentifyData.ModelNumber
+					(char*)devinfo.u.device.IdentifyData.ModelNumber  /*MiSt: Typecast necessary?*/
 				);
 		else {
 			memcpy(sn, devinfo.u.device.IdentifyData.SerialNumber,
@@ -193,7 +201,7 @@
 				(devinfo.u.device.Flags & DEVICE_FLAG_IN_ENCLOSURE) ? "E" : "",
 				devinfo.u.device.PathId+1,
 				devinfo.u.device.TargetId+1,
-				devinfo.u.device.IdentifyData.ModelNumber, sn,
+				(char*)devinfo.u.device.IdentifyData.ModelNumber, sn,  /*MiSt: Typecast necessary?*/
 				(int)(devinfo.Capacity*512/1000000),
 				(devinfo.u.device.Flags & DEVICE_FLAG_DISABLED)? "Disabled" : "Normal",
 				devinfo.u.device.ReadAheadEnabled? "[RA]":"",
@@ -234,15 +242,25 @@
 }
 
 #define MAX_PHYSICAL_DEVICE	128
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)  /*MiSt: commit 0ffddfbb834557b8babc7f050b83d11dbcbb1008 */
 int hpt_proc_get_info(struct Scsi_Host *host, char *buffer, char **start, off_t offset, int length)
+#else
+int hpt_proc_show_info(struct seq_file *m, struct Scsi_Host *host)
+#endif
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)  /*MiSt: commit 0ffddfbb834557b8babc7f050b83d11dbcbb1008 */
 	HPT_GET_INFO info;
+#else
+	#define info (*m)
+	#define buffillen count ? 0 : 0
+#endif
 	int i, j, count;
 	CONTROLLER_INFO_V2 conInfo2;
 	DEVICEID *ids;
 	int devs;	
 	PVBUS_EXT vbus_ext = get_vbus_ext(host);
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)  /*MiSt: commit 0ffddfbb834557b8babc7f050b83d11dbcbb1008 */
 	info.buffer     = buffer;
 	info.buflength  = length;
 	info.bufoffset  = offset;
@@ -250,16 +268,17 @@
 	info.buffillen  = 0;
 
 	if (start) *start = buffer;
+#endif
 
 	hpt_copy_info(&info, "%s %s\n\n", driver_name_long, driver_ver);
 
 	count = hpt_get_controller_count();
 
 	if (!(count>0) || !(ids = kmalloc(MAX_PHYSICAL_DEVICE * sizeof(DEVICEID), GFP_KERNEL)))
-		return info.buffillen;
+		return info.buffillen;  /*MiSt: return (*m).count ? 0 : 0 */
 
 	if ((devs = hpt_get_physical_devices(ids, MAX_PHYSICAL_DEVICE))<0)
-		return info.buffillen;
+		return info.buffillen;  /*MiSt: return (*m).count ? 0 : 0 */
 	
 	for (j=0; j<count; j++) {
 		int found;
@@ -308,7 +327,7 @@
 
 	kfree(ids);
 
-	return info.buffillen;
+	return info.buffillen;  /*MiSt: return (*m).count ? 0 : 0 */
 }
 
 /* not belong to this file logically, but we want to use ioctl interface */
diff -ruN rr64xl-linux-src-v1.3/osm/linux/install.sh kernel-4-x/osm/linux/install.sh
--- rr64xl-linux-src-v1.3/osm/linux/install.sh	2009-07-16 03:28:28.000000000 +0200
+++ kernel-4-x/osm/linux/install.sh	2016-05-29 14:43:13.000000000 +0200
@@ -3,6 +3,8 @@
 if test "${KERNEL_VER-set}" = set; then echo "KERNEL_VER is not set"; exit 1; fi
 if test "${TARGETNAME-set}" = set; then echo "TARGETNAME is not set"; exit 1; fi
 
+echo "Detected kernel version: ${KERNEL_VER}"
+
 PWD=`pwd`
 
 case ${KERNEL_VER} in
@@ -10,7 +12,7 @@
 	OBJ=o
 	MODVER=`modinfo -f%{kernel_version} ${PWD}/${TARGETNAME}.${OBJ}`
 	;;
-	2.6 | 3.* )
+	2.6 | 3.* | 4.* )  #MiSt: tested for Linux 4.4.0-22
 	OBJ=ko
 	MODVER=`modinfo -F vermagic ${PWD}/${TARGETNAME}.${OBJ} | cut -d' ' -f1`
 	;;
diff -ruN rr64xl-linux-src-v1.3/osm/linux/os_linux.c kernel-4-x/osm/linux/os_linux.c
--- rr64xl-linux-src-v1.3/osm/linux/os_linux.c	2009-07-16 03:28:28.000000000 +0200
+++ kernel-4-x/osm/linux/os_linux.c	2017-01-08 12:30:52.431764964 +0100
@@ -356,7 +356,12 @@
 				for (minor=0; minor<=240; minor+=16) {
 					struct block_device *bdev = bdget(MKDEV(major[i], minor));
 					if (bdev &&
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
+/*MiSt -- v2.6.37 API change // commit e525fd89d380c4a94c0d63913a1dd1a593ed25e7
+  Added 3rd argument for the active holder, previously this was hardcoded to NULL.
+*/
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,37)
+						blkdev_get(bdev, FMODE_READ, NULL)
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,28)
 						blkdev_get(bdev, FMODE_READ,NULL)
 #elif LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,28)
 						blkdev_get(bdev, FMODE_READ)
@@ -364,17 +369,37 @@
 						blkdev_get(bdev, FMODE_READ, 0 __BDEV_RAW)
 #endif
 						==0) {
-						if (bdev->bd_disk && bdev->bd_disk->driverfs_dev==&SDptr->sdev_gendev) {
+						if (bdev->bd_disk) {
+						    struct gendisk *cur_gendisk = bdev->bd_disk;
+/*MiSt -- v4.8.0 API change // commit 52c44d93c26f5a76068c0a8cc83bb8f56f38043d
+  block: remove ->driverfs_dev
+  See https://lkml.org/lkml/2016/2/25/662 for hints on how to handle this change.
+*/
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4,8,0)
+						    struct device *gendisk_dev = disk_to_dev(cur_gendisk)->parent;
+#else
+						    struct device *gendisk_dev = cur_gendisk->driverfs_dev;
+						    /*if (bdev->bd_disk->driverfs_dev==&SDptr->sdev_gendev) {*/
+#endif
+						    if (gendisk_dev==&SDptr->sdev_gendev) {
 							if (vbus_ext->sd_flags[id] & SD_FLAG_REVALIDATE) {
 								if (bdev->bd_disk->fops->revalidate_disk)
 									bdev->bd_disk->fops->revalidate_disk(bdev->bd_disk);
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,15)
+/*MiSt -- v4.7.0 API change // commit 9902af79c01a8e39bb99b922fa3eef6d4ea23d69
+  parallel lookups: actual switch to rwsem
+  See https://lkml.org/lkml/2016/5/1/212 for hints on how to handle this change.
+*/
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4,7,0)
+								inode_lock(bdev->bd_inode);
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,15)
 								mutex_lock(&bdev->bd_inode->i_mutex);
 #else 
 								down(&bdev->bd_inode->i_sem);
 #endif
 								i_size_write(bdev->bd_inode, (loff_t)get_capacity(bdev->bd_disk)<<9);
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,15)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4,7,0)
+								inode_unlock(bdev->bd_inode);
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,15)
 								mutex_unlock(&bdev->bd_inode->i_mutex);
 #else 
 								up(&bdev->bd_inode->i_sem);
@@ -389,6 +422,7 @@
 							blkdev_put(bdev __BDEV_RAW);
 #endif
 							goto next;
+                                                    }
 						}
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,28)
 						blkdev_put(bdev, FMODE_READ);
diff -ruN rr64xl-linux-src-v1.3/osm/linux/osm_linux.c kernel-4-x/osm/linux/osm_linux.c
--- rr64xl-linux-src-v1.3/osm/linux/osm_linux.c	2009-07-16 03:28:28.000000000 +0200
+++ kernel-4-x/osm/linux/osm_linux.c	2016-05-29 14:47:13.000000000 +0200
@@ -1807,6 +1807,7 @@
 	return -EINVAL;
 }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)  /*MiSt: commit 0ffddfbb834557b8babc7f050b83d11dbcbb1008 */
 static int hpt_proc_info26(struct Scsi_Host *host, char *buffer, char **start,
 					off_t offset, int length, int inout)
 {
@@ -1816,6 +1829,7 @@
 	else
 		return hpt_proc_get_info(host, buffer, start, offset, length);
 }
+#endif
 
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)
 static int hpt_proc_info24(char *buffer,char **start, off_t offset,
@@ -2123,7 +2138,12 @@
 	#endif
 #else /* 2.6.x */
 	proc_name:               driver_name,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)  /*MiSt: commit 0ffddfbb834557b8babc7f050b83d11dbcbb1008 */
 	proc_info:               hpt_proc_info26,
+#else
+	show_info:               hpt_proc_show_info,  /*see osm/linux/osm_linux.h,hptinfo.c*/
+	write_info:              hpt_proc_set_info,   /*see current file, line 1718*/
+#endif
 	max_sectors:             128,
 #endif
 	this_id:                 -1

diff -ruN rr64xl-linux-src-v1.3/osm/linux/osm_linux.h kernel-4-x/osm/linux/osm_linux.h
--- rr64xl-linux-src-v1.3/osm/linux/osm_linux.h	2009-07-16 03:28:28.000000000 +0200
+++ kernel-4-x/osm/linux/osm_linux.h	2016-05-29 13:50:11.000000000 +0200
@@ -175,7 +182,13 @@
 #define scsi_set_max_cmd_len(host, len) host->max_cmd_len = len
 #endif
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,5,0)
+/*MiSt -- v3.6 API change // commit 1ec9c5ddc17aa398f05646abfcbaf315b544e62f
+  highmem.h: remove the second argument of k[un]map_atomic()
+*/
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,6,0)
+#undef HPT_KMAP_TYPE
+#define HPT_FIND_PCI_DEVICE pci_get_device
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION(2,5,0)
 #define HPT_KMAP_TYPE KM_BIO_SRC_IRQ
 #define HPT_FIND_PCI_DEVICE pci_get_device
 #else 
@@ -297,6 +303,12 @@
 void refresh_sd_flags(PVBUS_EXT vbus_ext);
 void hpt_do_ioctl(IOCTL_ARG *ioctl_args);
 void hpt_stop_tasks(PVBUS_EXT vbus_ext);
+/*MiSt -- v2.6.19 API change // commit <TODO>
+  The file linux/config.h has been removed from 2.6.19 kernel.
+*/
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)
 int hpt_proc_get_info(struct Scsi_Host *host, char *buffer, char **start, off_t offset, int length);
-
+#else
+int hpt_proc_show_info(struct seq_file *m, struct Scsi_Host *host);
+#endif
 #endif
diff -ruN rr64xl-linux-src-v1.3/product/rr64xl/linux/config.c kernel-4-x/product/rr64xl/linux/config.c
--- rr64xl-linux-src-v1.3/product/rr64xl/linux/config.c	2009-07-16 03:28:28.000000000 +0200
+++ kernel-4-x/product/rr64xl/linux/config.c	2016-05-29 15:58:56.000000000 +0200
@@ -23,7 +23,17 @@
 
 char driver_name[] = "rr640l";
 char driver_name_long[] = "RocketRAID 640L/642L/644L/RR644LS SATA controller driver";
+
+/*MiSt: gcc 4.9 (and above) warns when the __DATE__ and __TIME__ macros
+        are used: https://gcc.gnu.org/gcc-4.9/changes.html */
+#if __GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 9)
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wdate-time"
+#endif
 char driver_ver[] = "v1.3 (" __DATE__ " " __TIME__ ")";
+#if __GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 9)
+#pragma GCC diagnostic pop
+#endif
 int  osm_max_targets = 32;
 
 int os_max_cache_size = 0x800000;

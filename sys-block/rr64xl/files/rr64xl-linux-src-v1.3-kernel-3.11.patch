diff -uraN rr64xl-linux-src-v1.3.orig/inc/linux_32mpa/Makefile.def rr64xl-linux-src-v1.3/inc/linux_32mpa/Makefile.def
--- rr64xl-linux-src-v1.3.orig/inc/linux_32mpa/Makefile.def	2013-03-24 19:07:34.000000000 +0100
+++ rr64xl-linux-src-v1.3/inc/linux_32mpa/Makefile.def	2013-09-29 19:38:57.946570350 +0200
@@ -89,10 +89,12 @@ ifeq ($(KERNEL_VER),)
 $(error Cannot find kernel version. Check $(KERNELDIR)/include/linux/version.h.)
 endif
 
+ifneq ($(MAJOR), 4)
 ifneq ($(MAJOR), 3)
 ifneq ($(KERNEL_VER), 2.6)
 ifneq ($(KERNEL_VER), 2.4)
-$(error Only kernel 2.4/2.6/3.x is supported but you use $(KERNEL_VER))
+$(error Only kernel 2.4/2.6/3.x/4.x is supported but you use $(KERNEL_VER))
+endif
 endif
 endif
 endif
@@ -159,8 +159,8 @@
 # export variables used by the scripts.
 export HPT_ROOT TARGETNAME TARGETMODS TARGETOBJS KERNELDIR C_DEFINE KERNEL_VER
 
-#patchkernel:
-#	@sh $(HPT_ROOT)/osm/linux/patch.sh
+patchkernel:
+	@sh $(HPT_ROOT)/osm/linux/patch.sh
 
 install: $(TARGET)
 	@sh $(HPT_ROOT)/osm/linux/install.sh
diff -uraN rr64xl-linux-src-v1.3.orig/osm/linux/hptinfo.c rr64xl-linux-src-v1.3/osm/linux/hptinfo.c
--- rr64xl-linux-src-v1.3.orig/osm/linux/hptinfo.c	2013-03-24 19:07:35.000000000 +0100
+++ rr64xl-linux-src-v1.3/osm/linux/hptinfo.c	2013-09-29 19:40:17.768139151 +0200
@@ -8,6 +8,7 @@
 #include "osm_linux.h"
 #include "hptintf.h"
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)
 typedef struct _hpt_GET_INFO {
 	char *buffer;
 	int buflength;
@@ -52,6 +53,10 @@
 	hpt_copy_mem_info(pinfo, buf, len);
 	return len;
 }
+#else // >= KERNEL_VERSION(3,10,0)
+typedef struct seq_file HPT_GET_INFO;
+#define hpt_copy_info seq_printf
+#endif
 
 #define HPT_DO_IOCTL(code, inbuf, insize, outbuf, outsize) ({\
 	IOCTL_ARG arg;\
@@ -181,7 +186,7 @@
 					devinfo.u.device.ControllerId+1,
 					devinfo.u.device.PathId+1,
 					devinfo.u.device.TargetId+1,
-					devinfo.u.device.IdentifyData.ModelNumber
+					(char*)devinfo.u.device.IdentifyData.ModelNumber
 				);
 		else {
 			memcpy(sn, devinfo.u.device.IdentifyData.SerialNumber,
@@ -193,7 +198,7 @@
 				(devinfo.u.device.Flags & DEVICE_FLAG_IN_ENCLOSURE) ? "E" : "",
 				devinfo.u.device.PathId+1,
 				devinfo.u.device.TargetId+1,
-				devinfo.u.device.IdentifyData.ModelNumber, sn,
+				(char*)devinfo.u.device.IdentifyData.ModelNumber, sn,
 				(int)(devinfo.Capacity*512/1000000),
 				(devinfo.u.device.Flags & DEVICE_FLAG_DISABLED)? "Disabled" : "Normal",
 				devinfo.u.device.ReadAheadEnabled? "[RA]":"",
@@ -234,15 +239,25 @@
 }
 
 #define MAX_PHYSICAL_DEVICE	128
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)
 int hpt_proc_get_info(struct Scsi_Host *host, char *buffer, char **start, off_t offset, int length)
+#else
+int hpt_proc_show_info(struct seq_file *m, struct Scsi_Host *host)
+#endif
 {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)
 	HPT_GET_INFO info;
+#else
+#define info (*m)
+#define buffillen count ? 0 : 0
+#endif
 	int i, j, count;
 	CONTROLLER_INFO_V2 conInfo2;
 	DEVICEID *ids;
 	int devs;	
 	PVBUS_EXT vbus_ext = get_vbus_ext(host);
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)
 	info.buffer     = buffer;
 	info.buflength  = length;
 	info.bufoffset  = offset;
@@ -250,6 +265,7 @@
 	info.buffillen  = 0;
 
 	if (start) *start = buffer;
+#endif
 
 	hpt_copy_info(&info, "%s %s\n\n", driver_name_long, driver_ver);
 
diff -uraN rr64xl-linux-src-v1.3.orig/osm/linux/osm_linux.c rr64xl-linux-src-v1.3/osm/linux/osm_linux.c
--- rr64xl-linux-src-v1.3.orig/osm/linux/osm_linux.c	2013-03-24 19:07:35.000000000 +0100
+++ rr64xl-linux-src-v1.3/osm/linux/osm_linux.c	2013-09-29 19:43:01.027336196 +0200
@@ -1807,6 +1807,7 @@
 	return -EINVAL;
 }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)
 static int hpt_proc_info26(struct Scsi_Host *host, char *buffer, char **start,
 					off_t offset, int length, int inout)
 {
@@ -1816,6 +1817,7 @@
 	else
 		return hpt_proc_get_info(host, buffer, start, offset, length);
 }
+#endif
 
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2,5,0)
 static int hpt_proc_info24(char *buffer,char **start, off_t offset,
@@ -2123,7 +2125,12 @@
 	#endif
 #else /* 2.6.x */
 	proc_name:               driver_name,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)
 	proc_info:               hpt_proc_info26,
+#else
+	show_info:               hpt_proc_show_info,
+	write_info:              hpt_proc_set_info,
+#endif
 	max_sectors:             128,
 #endif
 	this_id:                 -1
diff -uraN rr64xl-linux-src-v1.3.orig/osm/linux/osm_linux.h rr64xl-linux-src-v1.3/osm/linux/osm_linux.h
--- rr64xl-linux-src-v1.3.orig/osm/linux/osm_linux.h	2013-03-24 19:07:35.000000000 +0100
+++ rr64xl-linux-src-v1.3/osm/linux/osm_linux.h	2013-09-29 19:43:44.418126735 +0200
@@ -175,7 +175,9 @@
 #define scsi_set_max_cmd_len(host, len) host->max_cmd_len = len
 #endif
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,5,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,6,0)
+#define HPT_FIND_PCI_DEVICE pci_get_device
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION(2,5,0)
 #define HPT_KMAP_TYPE KM_BIO_SRC_IRQ
 #define HPT_FIND_PCI_DEVICE pci_get_device
 #else 
@@ -297,6 +299,9 @@
 void refresh_sd_flags(PVBUS_EXT vbus_ext);
 void hpt_do_ioctl(IOCTL_ARG *ioctl_args);
 void hpt_stop_tasks(PVBUS_EXT vbus_ext);
+#if LINUX_VERSION_CODE < KERNEL_VERSION(3,10,0)
 int hpt_proc_get_info(struct Scsi_Host *host, char *buffer, char **start, off_t offset, int length);
-
+#else
+int hpt_proc_show_info(struct seq_file *m, struct Scsi_Host *host);
+#endif
 #endif
diff -uraN rr64xl-linux-src-v1.3.orig/osm/linux/patch.sh rr64xl-linux-src-v1.3/osm/linux/patch.sh
--- rr64xl-linux-src-v1.3.orig/osm/linux/patch.sh	1970-01-01 01:00:00.000000000 +0100
+++ rr64xl-linux-src-v1.3/osm/linux/patch.sh	2013-09-29 19:51:17.109778162 +0200
@@ -0,0 +1,265 @@
+#!/bin/sh
+
+if test "${KERNEL_VER-set}" = set; then echo "KERNEL_VER is not set"; exit 1; fi
+if test "${KERNELDIR-set}" = set; then echo "KERNELDIR is not set"; exit 1; fi
+if test "${HPT_ROOT-set}" = set; then echo "HPT_ROOT is not set"; exit 1; fi
+if test "${TARGETNAME-set}" = set; then echo "TARGETNAME is not set"; exit 1; fi
+if test "${TARGETMODS-set}" = set; then echo "TARGETMODS is not set"; exit 1; fi
+if test "${TARGETOBJS-set}" = set; then echo "TARGETOBJS is not set"; exit 1; fi
+
+#check to see if it is really a src dir
+if [ ! -d ${KERNELDIR}/Documentation ] ; then
+	echo "The target directory ${KERNELDIR} is not a full kernel source tree."
+	exit 1
+fi
+
+ARCH=$( uname -m )
+PRODUCTNAME=$( ( cd .. ; pwd ) | sed "s/\//\n/g" | tail -n1 )
+UTARGETNAME=$( echo $TARGETNAME | tr "[:lower:]" "[:upper:]" )
+
+echo "The target kernel version is ${KERNEL_VER}"
+
+#echo "Make directory to hold the open source driver code"
+rm -rf ${KERNELDIR}/drivers/scsi/${TARGETNAME}
+mkdir ${KERNELDIR}/drivers/scsi/${TARGETNAME}
+cp ${HPT_ROOT}/inc/*.h ${KERNELDIR}/drivers/scsi/${TARGETNAME}/
+cp ${HPT_ROOT}/inc/linux_32mpa/* ${KERNELDIR}/drivers/scsi/${TARGETNAME}/
+cp ${HPT_ROOT}/osm/linux/* ${KERNELDIR}/drivers/scsi/${TARGETNAME}/
+cd ${HPT_ROOT}/product
+cp ${HPT_ROOT}/product/${PRODUCTNAME}/linux/* ${KERNELDIR}/drivers/scsi/${TARGETNAME}/
+
+case "$KERNEL_VER" in
+	2.4 )
+	cd ${HPT_ROOT}/lib/linux_32mpa/free-${ARCH}-regparm0
+	ld -r -o ${ARCH}-${TARGETNAME}.obj ${TARGETMODS}
+	mv ${ARCH}-${TARGETNAME}.obj $KERNELDIR/drivers/scsi/${TARGETNAME}/	
+	cd $KERNELDIR/drivers/scsi/${TARGETNAME}
+	if test ${ARCH} = "i686" ; then
+		mv ${ARCH}-${TARGETNAME}.obj i386-${TARGETNAME}.obj
+		ARCH=i386
+	fi
+	echo "#
+# Default makefile for Linux $KERNEL_VER
+# Copyright (C) 2004-2007 HighPoint Technologies, Inc. All Rights Reserved.
+#
+
+EXTRA_CFLAGS += ${C_DEFINE} -I\$(TOPDIR)/drivers/scsi
+
+ifeq (\$(ARCH), x86_64)
+EXTRA_CFLAGS += -mcmodel=kernel -DBITS_PER_LONG=64
+endif
+
+O_TARGET := ${TARGETNAME}.o
+
+obj-m := \$(O_TARGET)
+obj-y := ${TARGETOBJS} ${ARCH}-${TARGETNAME}.obj
+
+include \$(TOPDIR)/Rules.make
+" > Makefile
+	rm -f Makefile.* *.sh *~ *.o *.ko
+
+	grep "CONFIG_SCSI_${UTARGETNAME}" ../Config.in >> /dev/null
+	if test $? -eq 1 ; then
+		LINENUM=$(grep -n "SCSI\ low-level" ../Config.in | cut -f1 -d:)
+		let LINENUM=$LINENUM+1
+		mv ../Config.in ../Config.in.bak
+		sed -e "
+${LINENUM}a\\
+dep_tristate \'HighPoint RocketRAID ${PRODUCTNAME} support\' CONFIG_SCSI_${UTARGETNAME} \$CONFIG_SCSI \$CONFIG_PCI" ../Config.in.bak > ../Config.in
+	fi
+	grep "CONFIG_SCSI_${UTARGETNAME}" ../Makefile >> /dev/null
+	if test $? -eq 1 ; then
+		LINENUM=$(grep -n "obj-\$(CONFIG_SCSI)" ../Makefile | cut -f1 -d:)
+		let LINENUM=$LINENUM-2
+		let LINENUM2=$LINENUM+3
+		mv ../Makefile ../Makefile.bak
+		sed -e "
+${LINENUM}a\\
+subdir-\$(CONFIG_SCSI_${UTARGETNAME})	+= ${TARGETNAME}
+${LINENUM2}a\\
+ifeq (\$(CONFIG_SCSI_${UTARGETNAME}),y)
+${LINENUM2}a\\
+  obj-\$(CONFIG_SCSI_${UTARGETNAME})	+= ${TARGETNAME}/${TARGETNAME}.o
+${LINENUM2}a\\
+endif
+" ../Makefile.bak > ../Makefile
+	fi
+	grep "CONFIG_SCSI_${UTARGETNAME}" ../../../Documentation/Configure.help >> /dev/null
+	if test $? -eq 1 ; then
+		LINENUM=$(grep -n "#\ A\ couple\ of" ../../../Documentation/Configure.help | cut -f1 -d:)
+		let LINENUM=$LINENUM-2
+		mv ../../../Documentation/Configure.help ../../../Documentation/Configure.help.bak
+		sed "
+${LINENUM}a\\
+
+${LINENUM}a\\
+HPT RockedRAID ${PRODUCTNAME} support
+${LINENUM}a\\
+CONFIG_SCSI_${UTARGETNAME}
+${LINENUM}a\\
+  This is support for HighPoint ${PRODUCTNAME}
+${LINENUM}a\\
+  Host Adapter
+${LINENUM}a\\
+
+${LINENUM}a\\
+  This also could be compiled as module called ${TARGETNAME}.o.
+" ../../../Documentation/Configure.help.bak > ../../../Documentation/Configure.help
+	fi
+	if [ -d ../../../arch/i386 ];then
+		grep "CONFIG_SCSI_${UTARGETNAME}" ../../../arch/i386/defconfig >> /dev/null
+		if test $? -eq 1 ; then
+			LINENUM=$(grep -n "#\ SCSI\ low-level" ../../../arch/i386/defconfig | cut -f1 -d:)
+			let LINENUM=$LINENUM+1
+			mv ../../../arch/i386/defconfig ../../../arch/i386/defconfig.bak
+			sed "
+${LINENUM}a\\
+CONFIG_SCSI_${UTARGETNAME}=y
+" ../../../arch/i386/defconfig.bak > ../../../arch/i386/defconfig
+		fi
+	fi
+	if [ -d ../../../arch/x86_64 ]; then
+		grep "CONFIG_SCSI_${UTARGETNAME}" ../../../arch/x86_64/defconfig >> /dev/null
+		if test $? -eq 1 ; then
+			LINENUM=$(grep -n "#\ SCSI\ low-level" ../../../arch/i386/defconfig | cut -f1 -d:)
+			let LINENUM=$LINENUM+1
+			mv ../../../arch/x86_64/defconfig ../../../arch/x86_64/defconfig.bak
+			sed "
+${LINENUM}a\\
+CONFIG_SCSI_${UTARGETNAME}=y
+" ../../../arch/x86_64/defconfig.bak > ../../../arch/x86_64/defconfig
+		fi
+	fi
+	if [ -f ../../../.config ]; then
+		grep "CONFIG_SCSI_${UTARGETNAME}" ../../../.config >> /dev/null
+		if test $? -eq 1 ; then
+			LINENUM=$(grep -n "#\ SCSI\ low-level" ../../../.config | cut -f1 -d:)
+			let LINENUM=$LINENUM+1
+			mv ../../../.config ../../../.config.bak
+			sed "
+${LINENUM}a\\
+CONFIG_SCSI_${UTARGETNAME}=y
+" ../../../.config.bak > ../../../.config
+		fi
+	fi
+	;;
+	2.6 | 3.* )
+	cd ${HPT_ROOT}/lib/linux_32mpa/free-${ARCH}-regparm0
+	ld -r -o ${ARCH}-${TARGETNAME}.obj ${TARGETMODS}
+	mv ${ARCH}-${TARGETNAME}.obj $KERNELDIR/drivers/scsi/${TARGETNAME}/	
+	cd ${HPT_ROOT}/lib/linux_32mpa/free-${ARCH}-regparm3
+	ld -r -o ${ARCH}-${TARGETNAME}-3.obj ${TARGETMODS}
+	mv ${ARCH}-${TARGETNAME}-3.obj $KERNELDIR/drivers/scsi/${TARGETNAME}/	
+	cd $KERNELDIR/drivers/scsi/${TARGETNAME}
+	if test ${ARCH} = "i686" ; then
+		mv ${ARCH}-${TARGETNAME}.obj i386-${TARGETNAME}.obj
+		mv ${ARCH}-${TARGETNAME}-3.obj i386-${TARGETNAME}-3.obj
+		ARCH=i386
+	fi
+	echo "#
+# Default makefile for Linux $KERNEL_VER
+# Copyright (C) 2004-2007 HighPoint Technologies, Inc. All Rights Reserved.
+#
+
+EXTRA_CFLAGS += ${C_DEFINE} -I\$(TOPDIR)/drivers/scsi -I.
+
+ifeq (\$(ARCH), x86_64)
+EXTRA_CFLAGS += -mcmodel=kernel -DBITS_PER_LONG=64
+endif
+
+HPT_REGPARM := \$(shell echo \"\$(CFLAGS)\" | awk ' { match(\$\$0,\"-mregparm=\"); if (RSTART>0) print substr(\$\$0,RSTART+10,1);}')
+HPT_REGPARM := \$(if \$(HPT_REGPARM),\$(HPT_REGPARM),0)
+
+ifeq (\$(HPT_REGPARM), 0)
+TARGETMOD := ${ARCH}-${TARGETNAME}
+else
+TARGETMOD := ${ARCH}-${TARGETNAME}-3
+endif
+
+obj-\$(CONFIG_SCSI_${UTARGETNAME}) := ${TARGETNAME}.o
+
+${TARGETNAME}-objs := ${TARGETOBJS} \$(TARGETMOD).obj
+" > Makefile
+	rm -f Makefile.* *.sh *~ *.o *.ko
+	grep -n "SCSI_${UTARGETNAME}" ../Kconfig >> /dev/null
+	if test $? -eq 1 ; then
+		mv ../Kconfig ../Kconfig.bak
+		LINENUM=$(grep -n "SCSI\ low-level" ../Kconfig.bak | cut -f1 -d:)
+		let LINENUM=$LINENUM+1
+		sed "
+${LINENUM}a\\
+
+${LINENUM}a\\
+config SCSI_${UTARGETNAME}
+${LINENUM}a\\
+	tristate \"HighPoint RocketRAID ${PRODUCTNAME} support\"
+${LINENUM}a\\
+	depends on PCI && SCSI
+${LINENUM}a\\
+	help
+${LINENUM}a\\
+	This is support for HighPoint ${PRODUCTNAME}
+${LINENUM}a\\
+	Host Adapter
+${LINENUM}a\\
+
+${LINENUM}a\\
+	You can compile it as a module called ${TARGETNAME}.
+" ../Kconfig.bak > ../Kconfig
+	fi
+	grep -n "CONFIG_SCSI_${UTARGETNAME}" ../Makefile >> /dev/null
+	if test $? -eq 1 ; then
+		mv ../Makefile ../Makefile.bak
+		LINENUM=$(grep -n "obj-\$(CONFIG_SCSI_FC_ATTRS)" ../Makefile.bak | cut -f1 -d:)
+		let LINENUM=$LINENUM+2
+		sed "
+${LINENUM}a\\
+obj-\$(CONFIG_SCSI_${UTARGETNAME})  += ${TARGETNAME}/
+" ../Makefile.bak > ../Makefile
+	fi
+	if [ -d ../../../arch/i386 ];then
+		grep "CONFIG_SCSI_${UTARGETNAME}" ../../../arch/i386/defconfig >> /dev/null
+		if test $? -eq 1 ; then
+			LINENUM=$(grep -n "#\ SCSI\ low-level" ../../../arch/i386/defconfig | cut -f1 -d:)
+			let LINENUM=$LINENUM+1
+			mv ../../../arch/i386/defconfig ../../../arch/i386/defconfig.bak
+			sed "
+${LINENUM}a\\
+CONFIG_SCSI_${UTARGETNAME}=y
+" ../../../arch/i386/defconfig.bak > ../../../arch/i386/defconfig
+		fi
+	fi
+	if [ -d ../../arch/x86_64 ];then
+		grep "CONFIG_SCSI_${UTARGETNAME}" ../../../arch/x86_64/defconfig >> /dev/null
+		if test $? -eq 1 ; then
+			LINENUM=$(grep -n "#\ SCSI\ low-level" ../../../arch/x86_64/defconfig | cut -f1 -d:)
+			let LINENUM=$LINENUM+1
+			mv ../../../arch/x86_64/defconfig ../../../arch/x86_64/defconfig.bak
+			sed "
+${LINENUM}a\\
+CONFIG_SCSI_${UTARGETNAME}=y
+" ../../../arch/x86_64/defconfig.bak > ../../../arch/x86_64/defconfig
+		fi
+	fi
+	if [ -f ../../../.config ]; then
+		grep "CONFIG_SCSI_${UTARGETNAME}" ../../../.config >> /dev/null
+		if test $? -eq 1 ; then
+			LINENUM=$(grep -n "#\ SCSI\ low-level" ../../../.config | cut -f1 -d:)
+			let LINENUM=$LINENUM+1
+			mv ../../../.config ../../../.config.bak
+			sed "
+${LINENUM}a\\
+CONFIG_SCSI_${UTARGETNAME}=y
+" ../../../.config.bak > ../../../.config
+		fi
+	fi
+	;;
+	* )
+	echo " "
+	echo "ERROR! Target kernel version is not supported."
+	echo "Erasing what we have done..."
+	rm -rf ${KERNRLDIR}/drivers/scsi/${TARGETNAME}
+	exit 1
+esac
+echo "Kernel source has been patched successfully."
+exit 0
